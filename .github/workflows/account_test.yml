# Workflow to build and deploy designer dashboard to server.
name: OpenGameData Account Test
on:
  workflow_dispatch: # Allow manual trigger of this workflow from the Actions tab

env:
  CI: ""
  DEPLOY_HOST: ${{ vars.OGD_MONITOR_HOST }}

jobs:
  release_deploy:
    name: Setup for Testing
    runs-on: ubuntu-22.04
    steps:

  # 3. Remote config & deploy
    - name: Get OpenConnect installed
      run: sudo apt-get -q update && sudo apt-get -q install openconnect
    - name: Connect VPN
      run: echo ${{ secrets.VPN_PASS }} | sudo openconnect --protocol=gp -u ${{ secrets.VPN_USER }} --passwd-on-stdin soe.vpn.wisc.edu &

    - name: Setup Access Key
      run: |
        mkdir -p ~/.ssh
        echo '${{secrets.DEPLOY_KEY}}' >> ./key.txt
        chmod 600 ./key.txt

  test_status_strict:
    name: Status Test w/Strict Checking of Monitor API
    runs-on: ubuntu-22.04
    steps:
    - name: Connect VPN
      run: echo ${{ secrets.VPN_PASS }} | sudo openconnect --protocol=gp -u ${{ secrets.VPN_USER }} --passwd-on-stdin soe.vpn.wisc.edu &
    - name: Get system status
      run: ssh -i ./key.txt ${{ secrets.DEPLOY_USER }}@${{ env.DEPLOY_HOST }} "sudo systemctl status apache2"
  test_status_strict_self:
    name: Status Test Self w/Strict Checking of Monitor API
    runs-on: ubuntu-22.04
    steps:
    - name: Connect VPN
      run: echo ${{ secrets.VPN_PASS }} | sudo openconnect --protocol=gp -u ${{ secrets.VPN_USER }} --passwd-on-stdin soe.vpn.wisc.edu &
    - name: Get system status using own ID
      run: ssh -i ./key.txt ${{ secrets.DEPLOY_USER }}@${{ env.DEPLOY_HOST }} "sudo -u ${{ secrets.DEPLOY_USER }} systemctl status apache2"

  test_status_normal:
    name: Status Test of Monitor API
    runs-on: ubuntu-22.04
    steps:
    - name: Connect VPN
      run: echo ${{ secrets.VPN_PASS }} | sudo openconnect --protocol=gp -u ${{ secrets.VPN_USER }} --passwd-on-stdin soe.vpn.wisc.edu &
    - name: Get system status
      run: ssh -o StrictHostKeyChecking=no -i ./key.txt ${{ secrets.DEPLOY_USER }}@${{ env.DEPLOY_HOST }} "sudo systemctl status apache2"
  test_status_normal_self:
    name: Status Test Self of Monitor API
    runs-on: ubuntu-22.04
    steps:
    - name: Connect VPN
      run: echo ${{ secrets.VPN_PASS }} | sudo openconnect --protocol=gp -u ${{ secrets.VPN_USER }} --passwd-on-stdin soe.vpn.wisc.edu &
    - name: Get system status using own ID
      run: ssh -o StrictHostKeyChecking=no -i ./key.txt ${{ secrets.DEPLOY_USER }}@${{ env.DEPLOY_HOST }} "sudo -u ${{ secrets.DEPLOY_USER }} systemctl status apache2"
