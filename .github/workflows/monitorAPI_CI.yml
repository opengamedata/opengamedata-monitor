# Workflow to build and deploy designer dashboard to server.
name: OpenGameData Event Monitor API CI
on:
  push:
    paths:
    - '.github/workflows/monitorAPI_CI.yml'
    - '.github/actions/**'
    - 'shared/**'
    - 'monitor/**'
  workflow_dispatch: # Allow manual trigger of this workflow from the Actions tab

env:
  CI: ""
  LOCAL_DIR:   monitor
  DEPLOY_HOST: ${{ vars.OGD_STAGING_HOST }}
  DEPLOY_DIR:  ${{ vars.WSGI_PATH }}/${{ github.event.repository.name }}/${{ github.ref_name }}/monitor
  DEPLOY_URL:  ${{ vars.OGD_STAGING_HOST }}/${{ github.event.repository.name }}/${{ github.ref_name }}/monitor
  URL_PATH:    ${{ github.event.repository.name }}/${{ github.ref_name }}/monitor

jobs:
  ci_deploy:
    name: CI Deploy of Monitor API
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:

  # 1. Local checkout & config
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

  # 2. Build 

  # 3. Remote config & deploy
    - name: Get OpenConnect installed
      run: sudo apt-get -q update && sudo apt-get -q install openconnect
    - name: Connect VPN
      run: echo ${{ secrets.VPN_PASS }} | sudo openconnect --protocol=gp -u ${{ secrets.VPN_USER }} --passwd-on-stdin soe.vpn.wisc.edu &

    - name: Setup Access Key
      run: |
        mkdir -p ~/.ssh
        echo '${{secrets.DEPLOY_KEY}}' >> ./key.txt
        chmod 600 ./key.txt
    - name: Ensure directory exists
      run: ssh -o StrictHostKeyChecking=no -T -i ./key.txt ${{ secrets.DEPLOY_USER }}@${{ env.DEPLOY_HOST }} "mkdir -p ${{ env.DEPLOY_DIR }}"

    - name: Upload *App* to web server via rsync
      uses: burnett01/rsync-deployments@5.2
      with:
        switches: -vrc --exclude-from rsync-exclude
        path:        ${{ env.LOCAL_DIR }}/*
        remote_path: ${{ env.DEPLOY_DIR }}
        remote_host: ${{ env.DEPLOY_HOST }}
        remote_user: ${{ secrets.DEPLOY_USER }}
        remote_key:  ${{ secrets.DEPLOY_KEY  }}

  # 4. Cleanup & complete
    - name: Trigger service restart
      run: ssh -o StrictHostKeyChecking=no -T -i ./key.txt ${{ secrets.DEPLOY_USER }}@${{ env.DEPLOY_HOST }} "sudo systemctl restart monitor-api"
    - name: Announce deploy
      run: echo "Deployed to ${{ env.DEPLOY_URL }}"
    - name: Upload logs as artifacts
      uses: actions/upload-artifact@v2
      with:
        path: ./*.log
